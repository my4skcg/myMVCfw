<?php
namespace App\Controllers;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-11-16 at 20:47:09.
 */
class contactTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var contact
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$GLOBALS['appLog'] = new \Lib\appLogger(SITEPATH . 'tests/logs', \Lib\appLogger::DEBUG);
		$this->object = new contact;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 * @covers App\Controllers\contact::index
	 * @todo   Implement testIndex().
	 */
	public function testIndex() {
	}

	/**
	 * @covers App\Controllers\contact::buildParams
	 * @todo   Implement testBuildAddParams().
	 * @dataProvider providerBuildAddParams
	 */
	public function testBuildAddParams($r, $c) {

		\Lib\session::set('username', 'marion');
		\Lib\session::set('uid', '19');

		$_POST = array();
		$_POST = $c;
		$_POST['submit'] = 'Submit/Add Another';
		$return = $this->object->buildAddParams();

		$this->assertEquals($r['submit'], $return['submit']);
		$this->assertEquals($r['status'], $return['status']);
		$this->assertEquals($r['displayMsg'], $return['displayMsg']);
	}

	public function providerBuildAddParams() {
		$lang = \Lib\Registry::getInstance()->get('lang');

		/* New Test Case */
		$c = array();
		$r = array();
		$c['firstname'] = 'Too';
		$c['lastname'] = 'Bad';
		$c['phone1type'] = '1';
		$c['phone1'] = '123-456-7890';
		$c['phone2type'] = '2';
		$c['phone2'] = '456-456-4569';
		$c['phone3type'] = '3';
		$c['phone3'] = '465-963-2587';
		$c['userid'] = '33';

		$r['submit'] = $lang['SUBMITADD'];
		$r['status'] = 'successful';
		$r['displayMsg'] = $lang['CONTACTADDED'];

		/* New Test Case */
		$c1 = $c;
		$r1 = array();
		$c1['firstname'] = '';
		$r1['submit'] = $lang['SUBMITADD'];
		$r1['status'] = 'errors';
		$r1['displayMsg']['firstname'] = $lang['FIRSTNAMEREQ'];

		/* New Test Case */
		$c2 = $c;
		$r2 = array();
		$c2['lastname'] = '';
		$r2['submit'] = $lang['SUBMITADD'];
		$r2['status'] = 'errors';
		$r2['displayMsg']['lastname'] = $lang['LASTNAMEREQ'];

		/* New Test Case */
		$c3 = $c;
		$r3 = array();
		$c3['phone1type'] = '';
		$c3['phone2'] = '';
		$c3['phone3'] = 'abc-963-2587';

		$r3['submit'] = $lang['SUBMITADD'];
		$r3['status'] = 'errors';
		$r3['displayMsg']['phone1type'] = $lang['PHREQTYPE'];
		$r3['displayMsg']['phone2'] = $lang['PHTYPEREQNUM'];
		$r3['displayMsg']['phone3'] = $lang['PHINVFORMAT'];

		/* New Test Case */
		$c4 = $c;
		$r4 = array();
//		$c4['firstname'] = 'Candy';
//		$c4['lastname'] = 'Bar';
//		$c4['userid'] = '19';
		$r4['submit'] = $lang['SUBMITADD'];
		$r4['status'] = 'errors';
		$r4['displayMsg']['exists'] = $lang['CONTACTEXISTS'];

		return array(
				array ($r1, $c1),
				array ($r2, $c2),
				array ($r3, $c3),
				array($r, $c),    // good data
				array ($r4, $c4)  // duplicate - already exists
		);
	}

	/**
	 * 
	 * @param array $c
	 * @param array $result
	 * @dataProvider providerValidateFields
	 */
	public function testValidateFields(array $expectedr, array $c) {

		$lang = \Lib\Registry::getInstance()->get('lang');

		$realr = $this->object->validateFields($c);

//		echo '$expectedr = ' . print_r($expectedr, true) . PHP_EOL;
//		echo '$c = ' . print_r($c, true) . PHP_EOL;
//		echo '$realr = ' . print_r($realr, true) . PHP_EOL;

		$this->assertEquals($expectedr, $realr);
	}

	public function providerValidateFields() {
		$lang = \Lib\Registry::getInstance()->get('lang');

		$c = array();
		$r = array();
		$c['firstname'] = 'Too';
		$c['lastname'] = 'Bad';
		$c['phone1type'] = '1';
		$c['phone1'] = '123-456-7890';
		$c['phone2type'] = '3';
		$c['phone2'] = '456-456-4569';
		$c['phone3type'] = '3';
		$c['phone3'] = '465-963-2587';
		$c['userid'] = '33';

		$c1 = $c;
		$r1 = array();
		$c1['firstname'] = '';
		$r1['firstname'] = $lang['FIRSTNAMEREQ'];

		$c2 = $c;
		$r2 = array();
		$c2['lastname'] = '';
		$r2['lastname'] = $lang['LASTNAMEREQ'];

		$c3 = $c;
		$r3 = array();
		$c3['phone1type'] = '';
		$r3['phone1type'] = $lang['PHREQTYPE'];
		$c3['phone2'] = '';
		$r3['phone2'] = $lang['PHTYPEREQNUM'];
		$c3['phone3'] = 'abc-963-2587';
		$r3['phone3'] = $lang['PHINVFORMAT'];

		$c4 = $c;
		$r4 = array();
		$c4['firstname'] = 'Candy';
		$c4['lastname'] = 'Bar';
		$c4['userid'] = '19';
		$r4['exists'] = $lang['CONTACTEXISTS'];

		return array(
				array($r, $c),
				array ($r1, $c1),
				array ($r2, $c2),
				array ($r3, $c3),
				array ($r4, $c4),
		);
	}

}
