<?php
namespace Models;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-14 at 00:08:40.
 */
class userdoaTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var userdoa
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		require_once ('/var/www/mvc/lib/auth.php');
		require_once ('/var/www/mvc/models/userdoa.php');   // get the autoloader working; delete this!!!
		require_once ('/var/www/mvc/models/user.php');   // get the autoloader working; delete this!!!
		$this->object = new userdoa;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 * @covers Models\userdoa::userExists
	 * @todo   Implement testUserExists().
	 */
	public function testUserExists() {
		//echo  __CLASS__;
		$this->assertTrue($this->object->userExists('marion'));
		$this->assertFalse($this->object->userExists('dummy'));
	}

	/*
	 * @todo Create tests for error conditions
	 */
	/**
	 * @covers Models\userdoa::createNewUser
	 */
	public function testCreateNewUser() {
		$u['username'] = 'testuser';
		$u['email'] = 'testuser@test.com';
		$u['created'] = date("Y-m-d H:i:s");
		$u['active'] = false;
		$u['password'] = md5('testuser');
		$u['activateKey'] = 0;
		$uid = $this->object->createNewUser($u);
		$this->assertGreaterThanOrEqual(1, $uid);
		return $uid;
		//$this->assertGreaterThanOrEqual(1, $this->object->createNewUser($u));
	}

	/**
	 * @covers Models\userdoa::updateActive
	 * @depends testCreateNewUser
	 */
	public function testUpdateActive($uid) {
		//$uid = \Lib\auth::authenticate('testuser', 'testuser');
		//echo 'uid = ' . $uid . "\n";
		$this->assertTrue($this->object->updateActive($uid));
	}

	/**
	 * @covers Models\userdoa::getUserData
	 * @depends testCreateNewUser
	 * 
	 */
	public function testGetUserData($uid) {
		//$uid = \Lib\auth::authenticate('testuser', 'testuser');
	  $this->assertInstanceOf('Models\user', $this->object->getUserData($uid));
	}

	/**
	 * @covers Models\userdoa::updateLastlogin
	 * @depends testCreateNewUser
	 */
	public function testUpdateLastlogin($uid) {
		//$uid = \Lib\auth::authenticate('testuser', 'testuser');
		//echo 'uid = ' . $uid . "\n";
		$this->assertTrue($this->object->updateLastlogin($uid));
	}

	/**
	 * @covers Models\userdoa::deleteUser
	 * @depends testCreateNewUser
	 */
	public function testDeleteUser($uid) {
		//$uid = \Lib\auth::authenticate('testuser', 'testuser');
		//echo $uid . "\n";
		$this->assertTrue($this->object->deleteUser($uid));
	}

	/**
	 * @covers Models\userdoa::getAllUsers
	 * @todo   Implement testGetAllUsers().
	public function testGetAllUsers() {
		// Remove the following lines when you implement this test.
		//$this->markTestIncomplete('This test has not been implemented yet.');
	}
	 */

}
